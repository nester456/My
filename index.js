import { makeWASocket, useMultiFileAuthState, DisconnectReason } from '@whiskeysockets/baileys'
import { Boom } from '@hapi/boom'
import qrcode from 'qrcode'
import TelegramBot from 'node-telegram-bot-api'
import 'dotenv/config'

const telegramToken = process.env.TELEGRAM_TOKEN
const telegramChannelId = process.env.TELEGRAM_CHANNEL_ID
const whatsappGroupId = process.env.WHATSAPP_GROUP_ID

const bot = new TelegramBot(telegramToken, { polling: false })

const startBot = async () => {
  const { state, saveCreds } = await useMultiFileAuthState('auth_info')

  const sock = makeWASocket({
    auth: state,
    printQRInTerminal: false,
    async getMessage() {
      return { conversation: '–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è' }
    }
  })

  sock.ev.on('connection.update', async ({ connection, qr }) => {
    if (qr) {
      qrcode.toDataURL(qr, (err, url) => {
        if (err) {
          console.error('‚ùå QR –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –Ω–µ –≤–¥–∞–ª–∞—Å—è:', err)
        } else {
          console.log('üì≤ –í—ñ–¥–∫—Ä–∏–π —É –±—Ä–∞—É–∑–µ—Ä—ñ –¥–ª—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è QR-–∫–æ–¥—É:\n')
          console.log(url)
        }
      })
    }

    if (connection === 'open') {
      console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ WhatsApp!')
    }

    if (connection === 'close') {
      const shouldReconnect = sock?.lastDisconnect?.error?.output?.statusCode !== DisconnectReason.loggedOut
      console.log('‚ùå –ó º—î–¥–Ω–∞–Ω–Ω—è —Ä–æ–∑—ñ—Ä–≤–∞–Ω–æ. –ü–æ–≤—Ç–æ—Ä–Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è:', shouldReconnect)
      if (shouldReconnect) {
        startBot()
      }
    }
  })

  sock.ev.on('creds.update', saveCreds)

  sock.ev.on('messages.upsert', async ({ messages, type }) => {
    if (type !== 'notify') return
    for (const msg of messages) {
      const fromGroup = msg.key.remoteJid === whatsappGroupId
      const isText = msg.message?.conversation || msg.message?.extendedTextMessage?.text

      if (!fromGroup || !isText) return

      const text = msg.message.conversation || msg.message.extendedTextMessage.text
      const alertPhrases = [
        'Alert: Level Yellow',
        '–¢—Ä–∏–≤–æ–≥–∞: –†—ñ–≤–µ–Ω—å –ñ–æ–≤—Ç–∏–∏ÃÜ',
        'Alert: Level Blue',
        '–¢—Ä–∏–≤–æ–≥–∞: –†—ñ–≤–µ–Ω—å –°–∏–Ω—ñ–∏ÃÜ',
        'Alert: Level Red',
        '–¢—Ä–∏–≤–æ–≥–∞: –†—ñ–≤–µ–Ω—å –ß–µ—Ä–≤–æ–Ω–∏–∏ÃÜ',
        'Alert: Level Green',
        '–í—ñ–¥–±—ñ–∏ÃÜ: –†—ñ–≤–µ–Ω—å –ó–µ–ª–µ–Ω–∏–∏ÃÜ'
      ]

      if (alertPhrases.some(p => text.includes(p))) {
        await bot.sendMessage(telegramChannelId, text)
        console.log('üì§ –ü–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ Telegram:', text)
      } else {
        console.log('‚õî –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ–ø—É—â–µ–Ω–æ:', text)
      }
    }
  })
}

startBot()